//////////////////////////////////////////////////////////////////////
//
//  EXCEL1.PRG
//
//  Copyright:
//   Alaska Software, (c) 2002-2025. All rights reserved.         
//  
//  Contents:
//   This sample demonstrates the easiest way to export a DBF 
//   table to an Excel file.
//   
//  Remarks:
//   This is done by simply using MS Excel to open a DBF
//   table, and saving the resulting excel workbook as an
//   Excel file.
//   
//   Activex.ch is provided as part of a standard Xbase++ 
//   installation. excel.ch was generated by the tlb2ch utility, 
//   which also comes with Xbase++. The tlb2ch utility creates 
//   a ready-to-use CH file for all constants related to a 
//   specific ActiveX component. For more details please refer 
//   to the Xbase++ Online Docs.
//   
//  Syntax:
//   
//  Return:
//   
//////////////////////////////////////////////////////////////////////


#include "activex.ch"
#include "excel.ch"

//////////////////////////////////////////////////////////////////////
// Main entry point of the application
//////////////////////////////////////////////////////////////////////
PROCEDURE main
  LOCAL oExcel, oBook
  LOCAL cSDir, cTDir

  // create the "Excel.Application" object
  oExcel := CreateObject("Excel.Application")
  IF Empty( oExcel )
    MsgBox( "Excel is not installed" )
    RETURN
  ENDIF

  // Avoid message boxes such as "File already 
  // exists". Also, ensure the Excel application 
  // is visible.
  oExcel:DisplayAlerts := .F.
  oExcel:visible       := .T.

  // The source directory is the DBF table directory 
  // of the Xbase++ sample collection. The target 
  // directory is the directory where the application 
  // resides
  cTDir  := CurDrive()+":\"+CurDir()
  cSDir  := cTDir + "\..\..\data\misc"

  // open workbook using an existing dbf table
  oBook  := oExcel:workbooks:Open(cSDir+"\customer.dbf")

  // save workbook under a new name. Note that a fully-
  // quallified path must be specified. File type is 
  // xlWorkbookNormal, which corresponds to an ordinary 
  // Excel file.
  oBook:SaveAs( cTDir+"\MyExcel.xls" , xlWorkbookNormal )

  // Quit Excel and destroy the application object
  oExcel:Quit()
  oExcel:Destroy()
  WAIT
RETURN
